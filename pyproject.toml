[tool.poetry]
name = "gcp-pilot"
version = "0.49.3"
description = "Google Cloud Platform Friendly Pilot"
authors = ["Joao Daher <joao@daher.dev>"]
repository = "https://github.com/flamingo-run/gcp-pilot"
readme = "README.md"
keywords = ["gcp", "google cloud python", "datastore orm"]
packages = [
    { include = "gcp_pilot" },
]


[tool.poetry.dependencies]
python = ">=3.8,<3.11"
pytz = "*"
tenacity = "*"
factory_boy = "*"
google-api-python-client = "*"
google-cloud-tasks = { version = "^2", optional = true}
google-cloud-scheduler = { version = "^2", optional = true}
google-cloud-storage = { version = "^2", optional = true}
google-cloud-build = { version = "^3", optional = true}
google-cloud-bigquery = { version = "^2", optional = true}
google-cloud-speech = { version = "^2", optional = true}
gspread = { version = "^5", optional = true}
google-cloud-pubsub = { version = "^2", optional = true}
google-cloud-datastore = { version = "^2", optional = true}
pydantic = { version = "*", optional = true}
google-cloud-dns = { version = "^0", optional = true}
google-cloud-logging = { version = "^3", optional = true}
google-cloud-error-reporting = { version = "*", optional = true}
google-cloud-secret-manager = { version = "*", optional = true}
"fhir.resources" = { version = "*", optional = true}

[tool.poetry.extras]
tasks = ["google-cloud-tasks", "google-cloud-scheduler"]
build = ["google-cloud-build"]
storage = ["google-cloud-storage"]
bigquery = ["google-cloud-bigquery"]
speech = ["google-cloud-speech"]
sheets = ["gspread"]
pubsub = ["google-cloud-pubsub"]
datastore = ["google-cloud-datastore", "pydantic"]
dns = ["google-cloud-dns"]
secret = ["google-cloud-secret-manager"]
monitoring = ["google-cloud-logging", "google-cloud-error-reporting"]
healthcare = ["fhir.resources"]


[tool.poetry.dev-dependencies]
black = "*"
pylint = "*"
safety = "*"
coverage = "*"
pytest = "*"
pytest-cov = "*"


[tool.black]
line-length = 120
target-version = ['py310']


[tool.pylint.messages_control]
disable = "C0330, C0326, C0114, C0115, C0116, W0212, W0511, W0613, W1203, W0221, R0901, R0903, R0913, R0201, R0801, R0401, R0902, R0914, E1101, R0912, C0204"

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.basic]
good-names= "i, j, k, m, n, dt, db, id, pk, tz, qs, ex, _"

[tool.pylint."MESSAGES CONTROL"]
extension-pkg-whitelist = "pydantic"

[tool.coverage.run]
branch = true
source = ["gcp_pilot"]

[tool.pytest.ini_options]
addopts = "--cov"


[build-system]
requires = ["poetry"]
build-backend = "poetry.masonry.api"
