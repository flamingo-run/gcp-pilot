name: Github CI

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.x'
          cache: poetry

      - name: Install Python dependencies
        run: make dependencies
      - name: Lint with pylint
        run: |
          make lint

  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10.x', '3.11.x' ]
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install Python dependencies
        run: make dependencies
      - name: Install as a package
        run: poetry build

  security:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10.x', '3.11.x' ]
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install Python dependencies
        run: make dependencies
      - name: Verify security vulnerabilities
        run: make check

  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10.x', '3.11.x' ]
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install Python dependencies
        run: make dependencies
      - name: Unit test
        run: make unit
        env:
          LOG_LEVEL: ERROR

      - name: Report Coverage
        run: |
          pip3 install --upgrade coveralls coverage[toml]
          coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
